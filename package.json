{
  "name": "imgponic-pwa",
  "version": "0.1.4",
  "packageManager": "pnpm@9.12.3",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "lint": "eslint \"{src,tests}/**/*.{ts,tsx}\"",
    "typecheck": "tsc --noEmit",
    "test": "node --loader ts-node/esm scripts/test/run-selected.ts",
    "test:autosave": "pnpm test -- \"tests/autosave/**/*.test.ts\"",
    "test:merge": "pnpm test -- \"tests/merge/**/*.test.ts\"",
    "test:cli": "pnpm test -- \"tests/cli/**/*.test.ts\"",
    "test:collector": "pnpm test -- \"tests/collector/**/*.test.ts\"",
    "test:telemetry": "pnpm test -- \"tests/telemetry/**/*.test.ts\"",
    "test:coverage": "node --input-type=module --eval \"import { mkdirSync } from 'node:fs'; const dir = process.argv.at(-1); if (!dir) throw new Error('missing dir'); mkdirSync(dir, { recursive: true });\" coverage && NODE_V8_COVERAGE=coverage node --input-type=module --eval \"import { spawnSync } from 'node:child_process'; import { readdirSync, statSync } from 'node:fs'; import { join } from 'node:path'; const coverageFlag = '--test-coverage-dir=coverage'; const [major] = process.versions.node.split('.', 1); const coverageArgs = Number.parseInt(major, 10) >= 22 ? ['--test-coverage', coverageFlag] : []; const files = []; const walk = (dir) => { for (const entry of readdirSync(dir)) { const full = join(dir, entry); const stat = statSync(full); if (stat.isDirectory()) { walk(full); } else if (full.endsWith('.test.ts')) { files.push(full); } } }; walk('tests'); const result = spawnSync(process.execPath, ['--loader', 'ts-node/esm', '--test', ...coverageArgs, ...files], { stdio: 'inherit', env: process.env }); if (result.error) throw result.error; process.exit(result.status ?? 0);\" -- --test-coverage-dir=coverage",
    "test:junit": "node --input-type=module --eval \"import { mkdirSync } from 'node:fs'; const dir = process.argv.at(-1); if (!dir) throw new Error('missing dir'); mkdirSync(dir, { recursive: true });\" reports && node --loader ts-node/esm --test --test-reporter=junit --test-reporter-destination=reports/junit.xml tests/**/*.test.ts",
    "license:check": "node --loader ts-node/esm scripts/license/verify.ts",
    "golden": "pnpm -s ts-node --files scripts/golden/compare.ts",
    "golden:ci": "pnpm -s ts-node --files scripts/golden/compare.ts tests/fixtures/case-mini-03/project.storyboard.json tests/fixtures/case-mini-03 ."
  },
  "dependencies": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "zustand": "^4.5.2"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.10.0",
    "eslint": "^9.11.1",
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.3",
    "vite": "^5.4.8"
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "browser": true,
      "es2022": true,
      "node": true
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ]
  }
}
