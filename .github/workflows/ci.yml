name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'

jobs:
  sbom:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Configure pnpm store
        run: pnpm config set store-dir .pnpm-store

      - name: Ensure lockfile
        run: |
          if [ ! -f pnpm-lock.yaml ]; then
            pnpm install --lockfile-only
          fi

      - name: Install dependencies for SBOM
        run: pnpm install --frozen-lockfile

      - name: Install Syft CLI
        uses: anchore/sbom-action/download-syft@v0
        with:
          syft-version: latest

      - name: Generate SBOM
        run: |
          set -euo pipefail
          syft dir:. --scope all-layers -o cyclonedx-json=sbom.json 2>&1 | tee sbom.log

      - name: Upload SBOM artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          if-no-files-found: error

      - name: Upload SBOM log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: sbom-log
          path: sbom.log
          if-no-files-found: ignore

  license:
    needs:
      - sbom
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare pnpm
        run: corepack prepare pnpm@9.12.3 --activate

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Ensure lockfile
        run: |
          if [ ! -f pnpm-lock.yaml ]; then
            pnpm install --lockfile-only
          fi

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Verify licenses
        run: pnpm -s license:check

      - name: Upload license reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: license-artifacts
          path: |
            license-report.json
            license-summary.json
          if-no-files-found: error

  build:
    needs:
      - sbom
      - license
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare pnpm
        run: corepack prepare pnpm@9.12.3 --activate

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Ensure lockfile
        run: |
          if [ ! -f pnpm-lock.yaml ]; then
            pnpm install --lockfile-only
          fi

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm -s lint

      - name: Type check
        run: pnpm -s typecheck

      - name: Test
        run: pnpm -s test

      - name: Build
        run: |
          set -euo pipefail
          pnpm --reporter ndjson -s build |& tee build.log

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist
          if-no-files-found: ignore

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log
          if-no-files-found: ignore
